<?php
/**
 * @file
 * Bootstrap sub-theme.
 *
 * Place your custom PHP code in this file.
 */

/**
 * Implements hook_preprocess_page().
 */
function si8_preprocess_page(&$vars) {
  $vars['base_path'] = base_path();

  /** Footer contents */
  $custom_contents = ['footer1', 'footer2', 'footer3'];
  foreach ($custom_contents as $custom_content) {
    $view = \Drupal\views\Views::getView('custom_content');
    if (is_object($view)) {
      $view->setArguments([$custom_content]);
      $view->setDisplay('machine_name');
      $view->preExecute();
      $view->execute();
      $vars[$custom_content] = $view->buildRenderable('machine_name', [$custom_content]);
    }
  }

}

function si8_preprocess_paragraph__box_primo_livello(&$vars) {

  // Apply the masonry display on this page.
  //\Drupal::service('masonry.service')->applyMasonryDisplay($vars, '.field--name-field-box', '> .field--item');
}

function si8_preprocess_page_title(&$vars) {

  // Load the node entity from current route
 $route = \Drupal::routeMatch()->getRouteObject()->getPath();

 if ($route == '/news/{arg_0}/{arg_1}') {
   $args = \Drupal::routeMatch()->getParameters();
   $tid = $args->get('arg_0');
   $term = $descrizione = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->load($tid);
   $vars['title'] = 'News - ' . $term->label();
 }

}

function si8_preprocess_links__language_block(&$variables) {
  foreach ($variables['links'] as $key => $value) {
    $language = $value['link']['#options']['language'];
    $variables['links'][$key]['link']['#title'] = $language->id();
  }
}

/**
 * Implements hook_preprocess_node().
 */
function si8_preprocess_node(&$vars) {
  $node = $vars['node'];
  /* @var \Drupal\node\Entity\Node $node */

  switch ( $vars['view_mode']) {
    case 'risultato_ricerca':
      $vars['tipo_contenuto'] = $node->type->entity->label();
      $vars['data_creazione'] = \Drupal::service('date.formatter')->format($node->getCreatedTime(), 'short_date');
      $vars['data_modifica'] = \Drupal::service('date.formatter')->format($node->getChangedTime(), 'short_date');
      break;
  }

}
